{{- if .Values.postgresql.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-postgresql
type: Opaque
data:
  postgres-password: {{ .Values.postgresql.password | b64enc }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-postgresql
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.postgresql.storageClass }}
  resources:
    requests:
      storage: {{ .Values.postgresql.storageSize }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgresql
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgresql
    spec:
      {{- if .Values.nodePlacement.enabled }}
      {{- with .Values.nodePlacement.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodePlacement.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
      - name: postgresql
        image: {{ .Values.postgresql.image }}
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.database }}
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.username }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata/postgres
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data/pgdata
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-postgresql
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgresql
spec:
  selector:
    app: {{ .Release.Name }}-postgresql
  ports:
  - port: 5432
    targetPort: 5432
{{- end }} 